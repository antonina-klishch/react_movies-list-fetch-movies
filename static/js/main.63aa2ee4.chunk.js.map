{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","setTitle","setMovie","isError","setIsError","isLoading","setIsLoading","onSubmit","e","query","preventDefault","trim","fetch","then","res","json","catch","Response","Error","response","newMovie","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","placeholder","value","onChange","target","cn","disabled","onClick","isUniqueMovie","every","prevmovie","App","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63aa2ee4.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { FormEvent, useState } from 'react';\nimport './FindMovie.scss';\nimport cn from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (m: Movie) => void,\n  movies: Movie[],\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie, movies }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleInputTitle = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsError(false);\n  };\n\n  const handleSearchMovie = (e: FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    getMovie(title.trim())\n      .then((response) => {\n        if ('Response' in response && response.Response === 'False') {\n          setIsError(true);\n          setMovie(null);\n        } else {\n          setIsError(false);\n\n          const res = response as MovieData;\n\n          const newMovie: Movie = {\n            title: res.Title,\n            description: res.Plot || '',\n            imgUrl: res.Poster !== 'N/A'\n              ? res.Poster\n              : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n            imdbUrl: `https://www.imdb.com/title/${res.imdbID}`,\n            imdbId: res.imdbID || '',\n          };\n\n          setMovie(newMovie);\n        }\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const handleAddMovie = () => {\n    const isUniqueMovie = movies.every(\n      prevmovie => prevmovie.imdbId !== movie?.imdbId,\n    );\n\n    if (movie && isUniqueMovie) {\n      addMovie(movie);\n    }\n\n    setTitle('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSearchMovie}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n              value={movie?.title}\n              onChange={handleInputTitle}\n            />\n          </div>\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!title}\n            >\n              Find a movie\n            </button>\n          </div>\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n\n          )}\n        </div>\n      </form>\n      {\n        movie && (\n          <div className=\"container\" data-cy=\"previewContainer\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </div>\n        )\n      }\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\n// const API_URL = 'https://www.omdbapi.com/?apikey=your-key';\nconst API_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=39de73d';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovie] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovie(currentMovies => [...currentMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} movies={movies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}